####################################################
# .zshrc: franck's main configuration file for zsh #
####################################################

##############################################################
# Profiling of shell startup can be enabled for analysis here.

PROFILE_STARTUP=false
if [[ "$PROFILE_STARTUP" == true ]]; then
    # http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html
    PS4=$'%D{%M%S%.} %N:%i> '
    exec 3>&2 2>$HOME/tmp/startlog.$$
    setopt xtrace prompt_subst
fi

##################################################
# Global variable determining the current OS used.

export HOST_OS=`uname`

################
# Login in a TTY

[[ "$HOST_OS" = "Linux" && -z $DISPLAY && $XDG_VTNR -eq 1 ]] && exec startx &> /dev/null

####################################
# Useful function used in this file.

load_if_exists() {
    filename=$1

    if [ -f "$filename" ]; then
        source "$filename"
    fi
}

############################################################################
# This file may contain additional variables that are generated out of bound
# and can be used in the configuration below.

load_if_exists "${HOME}/.zshrc_gen"

#####################
# Main Configuration

HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000

autoload -Uz compinit
compinit

setopt correct
setopt hist_ignore_dups         # Don't put duplicates in history.
setopt no_bang_hist             # Don't redefine ! (useful for commit messages etc...).
setopt nobeep
setopt transient_rprompt        # Don't keep RPROMPT when command is entered.
setopt prompt_subst
setopt interactivecomments      # Allow comments in interactive shell.

##############################################################
# Aliases + Keyboard configuration + Completion configuration.

load_if_exists "${HOME}/.zsh/aliases.sh"
load_if_exists "${HOME}/.zsh/keyboard.sh"
load_if_exists "${HOME}/.zsh/completion.sh"

#######################
# Prompt Configuration

fpath=($fpath "$HOME/.zsh/functions")
typeset -U fpath
autoload -Uz add-zsh-hook

autoload colors zsh/terminfo
if [[ "$terminfo[colors]" -ge 8 ]]; then
    colors
fi
for color in RED GREEN YELLOW BLUE MAGENTA CYAN WHITE; do
    eval CL_${${color}[1]}='%{$terminfo[bold]$fg[${(L)color}]%}'
    eval CL_L${${color}[1]}='%{$fg[${(L)color}]%}'
done
CL_N="%{$terminfo[sgr0]%}"

# Default prompt if not defined in another file loaded after.
#
# [root@localhost pwd]# ... (hour)
# [username@localhost pwd]% ... (hour)

PROMPT="${CL_B}[${CL_Y}%n${CL_B}@${CL_N}${CL_LR}%m ${CL_LM}%~${CL_N}${CL_B}]%#${CL_N} "
RPROMPT="${CL_B}(%*)${CL_N}"

# This file should overwrite PROMPT and RPROMPT.
if ! [ $SSH_TTY ] && [ -f "${HOME}/.zsh/prompt.sh" ] && [[ "$HOST_OS" != "Linux" || -n "$DISPLAY" ]]; then
    source "${HOME}/.zsh/prompt.sh"
fi

##########
# Aliases

alias find='noglob find'
alias reload='. ${HOME}/.zshrc'

###################################
# Virtualenv wrapper configuration.

function virtualenvwrapper_install {
    VENV_WRAPPER=$1

    if [ -f "$VENV_WRAPPER" ]; then
        # Create and install virtualenv directory.
        export WORKON_HOME="$HOME/.virtualenvs"
        mkdir -p "$WORKON_HOME"
        # Load the virtualenv wrapper source.
        source "$VENV_WRAPPER"
    fi
}

virtualenv_funcs=(workon deactivate mkvirtualenv)

function virtualenvwrapper_load_and_call {
    unset -f "${virtualenv_funcs[@]}"

    if [ "$HOST_OS" = "Linux" ]; then
        virtualenvwrapper_install "/usr/bin/virtualenvwrapper.sh"
        virtualenvwrapper_install "/usr/share/virtualenvwrapper/virtualenvwrapper.sh"
    elif [ "$HOST_OS" = "Darwin" ]; then
        virtualenvwrapper_install "/usr/local/bin/virtualenvwrapper.sh"
        export VIRTUALENVWRAPPER_PYTHON="/usr/local/bin/python2"
    fi

    "$@"
}

for func in "${virtualenv_funcs[@]}"; do
    eval "${func}() { virtualenvwrapper_load_and_call ${func} \"\$@\"; }"
done

#####################################
# Add brew bin directories on MacOSX.

PATH="${HOME}/.zsh/bin:${HOME}/.local/bin:${PATH}"
if [ -n "${BREW_PREFIX}" ]; then
    export PATH="$PATH:${BREW_PREFIX}/sbin:${BREW_PREFIX}/bin"
fi

######################################################
# Including .zsh_opt, location specific configuration.

load_if_exists "${HOME}/.zshrc_opt"

#############################################################################
# Now finally, set the mandatory env variables that are mandatory to defaults
# if they are not set.
if [ -z "$EMAIL" ]; then
    export EMAIL="franck.michea@gmail.com"
fi

# EOF

if [[ "$PROFILE_STARTUP" == true ]]; then
    unsetopt xtrace
    exec 2>&3 3>&-
fi

# Disable brew analytics
brew analytics off 2>&1 > /dev/null

####################
# Load direnv hooks.
if which direnv > /dev/null; then
    eval "$(direnv hook zsh)"
fi
